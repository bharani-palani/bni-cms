{"version":3,"sources":["contexts/AppContext.js","services/apiServices.js","environment.js","components/configuration/crypt.js","components/configuration/Gallery/AwsFactory.js","components/configuration/Gallery/MediaFactory.js","components/configuration/Gallery/FactoryMap.js","images/ban.svg","images/spinner-1.svg","components/configuration/Gallery/SignedUrl.js","components/mainApp/Root.js"],"names":["AppContext","createContext","apiInstance","Axios","create","baseURL","process","encryptSaltKey","AwsFactory","contextData","_this","_classCallCheck","uploadFile","target","Upload","client","S3Client","config","leavePartsOnError","params","_objectSpread","Bucket","deleteFile","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rest","promise","wrap","_context","prev","next","Object","keys","length","S3","deleteObject","abrupt","stop","_x","apply","arguments","deleteFolder","_ref2","_callee2","folder","callback","_context2","Prefix","listObjects","err","data","status","Contents","Delete","Objects","forEach","content","push","Key","deleteObjects","IsTruncated","self","_x2","_x3","renameFile","_ref3","_callee3","object","BUCKET_NAME","_context3","copyObject","CopySource","concat","oldKey","newKey","_x4","renameFolder","_ref4","_callee5","bucketName","folderToMove","destinationFolder","listObjectsResponse","folderContentInfo","folderPrefix","_context5","sent","Promise","all","map","_ref5","_callee4","fileInfo","copyObj","delObj","_context4","replace","_x6","t0","console","error","_x5","isUrlInternal","unsignedUrl","split","getSignedUrl","_ref6","_callee6","path","pieces","extension","command","url","_context6","slice","join","pop","expiresIn","GetObjectCommand","_x7","downloadToBrowser","route","file","then","link","document","createElement","setAttribute","body","appendChild","click","removeChild","fetchStream","_ref7","_callee8","response","_context8","send","_ref8","_callee7","res","reader","array","_yield$reader$read","value","ele","_context7","Body","pipeThrough","TextDecoderStream","getReader","read","done","_x9","_x8","this","aws_s3_bucket","region","CryptoJS","AES","decrypt","aws_s3_region","toString","enc","Utf8","credentials","accessKeyId","aws_s3_access_key_id","secretAccessKey","aws_s3_secret_access_key","_createClass","key","MediaFactory","myEmitter","EventEmitter","onUploadProgress","progressEvent","pObj","loaded","total","emit","formdata","FormData","append","fileStorageAccessKey","post","getParams","URLSearchParams","fromFileURL","toFileURL","get","fileURL","r","catch","downloadable","_args4","undefined","fetch","c","LastModified","Date","FactoryMap","storageType","appData","library","getServiceProvider","us","Root","props","_useState","useState","_useState2","_slicedToArray","master","setMaster","_useState3","_useState4","fetchStatus","setFetchStatus","getData","favIconSetter","documentElement","style","setProperty","webThemeColor","webThemeBackground","finally","querySelector","sp","favIconImg","href","useEffect","_jsx","_Fragment","children","Provider"],"mappings":"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","file":"static/js/4.0b61e16c.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nconst AppContext = createContext([{}, () => {}]);\n\nexport default AppContext;\n","import Axios from 'axios';\nimport { baseUrl } from '../environment';\n\nconst apiInstance = Axios.create({\n  baseURL: baseUrl(),\n});\n\nexport default apiInstance;\n","const baseUrl = () => {\r\n  const dev = process.env.REACT_APP_LOCALHOST_BASE_URL;\r\n  const prod = process.env.REACT_APP_PRODUCTION_BASE_URL;\r\n  return process.env.NODE_ENV === 'development' ? dev : prod;\r\n};\r\nconst rapidApiKey = 'ab41d118d1msh03b94fd2a0f7b61p10edcdjsn2d55dd5a2c32';\r\n\r\nexport { baseUrl, rapidApiKey };\r\n","const encryptKeys = [\n  'aws_s3_access_key_id',\n  'aws_s3_region',\n  'aws_s3_secret_access_key',\n  'google_map_api_key',\n  'google_login_auth_token',\n  'facebook_app_id',\n];\nconst encryptSaltKey = 'web';\nconst clientServerEncryptKeys = ['fileStorageAccessKey'];\nexport { encryptKeys, encryptSaltKey, clientServerEncryptKeys };\n","/* eslint-disable-invalid-this */\n/* eslint-env es6*/\nimport { S3Client, S3, GetObjectCommand } from '@aws-sdk/client-s3';\nimport { Upload } from '@aws-sdk/lib-storage';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport CryptoJS from 'crypto-js';\nimport { encryptSaltKey } from '../crypt';\n\nexport default class AwsFactory {\n  constructor(contextData) {\n    // this.Bucket = CryptoJS.AES.decrypt(contextData.aws_s3_bucket, contextData.user_mail).toString(CryptoJS.enc.Utf8);\n    this.Bucket = contextData.aws_s3_bucket;\n    this.expiresIn = 24 * 60 * 60;\n    this.config = {\n      region: CryptoJS.AES.decrypt(\n        contextData.aws_s3_region,\n        contextData[encryptSaltKey]\n      ).toString(CryptoJS.enc.Utf8),\n      credentials: {\n        accessKeyId: CryptoJS.AES.decrypt(\n          contextData.aws_s3_access_key_id,\n          contextData[encryptSaltKey]\n        ).toString(CryptoJS.enc.Utf8),\n        secretAccessKey: CryptoJS.AES.decrypt(\n          contextData.aws_s3_secret_access_key,\n          contextData[encryptSaltKey]\n        ).toString(CryptoJS.enc.Utf8),\n      },\n    };\n    this.self = this;\n  }\n\n  getBuckeName() {\n    return this.Bucket;\n  }\n\n  fetchFileFolder(rest) {\n    const params = {\n      Bucket: this.Bucket,\n      ...(Object.keys(rest).length > 0 && { ...rest }),\n    };\n    const promise = new S3(this.config).listObjects(params);\n    return promise;\n  }\n\n  uploadFile = target => {\n    const instance = new Upload({\n      client: new S3Client(this.config),\n      leavePartsOnError: false,\n      params: { ...target, Bucket: this.Bucket },\n    });\n    return instance;\n  };\n\n  deleteFile = async rest => {\n    const params = {\n      Bucket: this.Bucket,\n      ...(Object.keys(rest).length > 0 && { ...rest }),\n    };\n    const promise = new S3(this.config).deleteObject(params);\n    return promise;\n  };\n\n  deleteFolder = async (folder, callback) => {\n    let params = {\n      Bucket: this.Bucket,\n      Prefix: folder,\n    };\n\n    new S3(this.config).listObjects(params, (err, data) => {\n      if (err) {\n        return callback({ status: 'fail' });\n      }\n      if (data.Contents.length === 0) {\n        callback({ status: 'success' });\n      }\n\n      params = { Bucket: this.Bucket };\n      params.Delete = { Objects: [] };\n\n      data.Contents.forEach(content => {\n        params.Delete.Objects.push({ Key: content.Key });\n      });\n\n      new S3(this.config).deleteObjects(params, (err, data) => {\n        if (err) {\n          return callback({ status: 'fail' });\n        }\n        if (data.IsTruncated) {\n          this.self.deleteFolder(this.Bucket, callback);\n        } else {\n          callback({ status: 'success' });\n        }\n      });\n    });\n  };\n\n  renameFile = async object => {\n    const BUCKET_NAME = this.Bucket;\n    return new S3(this.config).copyObject(\n      {\n        Bucket: BUCKET_NAME,\n        CopySource: `${BUCKET_NAME}/${object.oldKey}`,\n        Key: object.newKey,\n      },\n      () => {\n        new S3(this.config).deleteObject({\n          Bucket: BUCKET_NAME,\n          Key: object.oldKey,\n        });\n      }\n    );\n  };\n\n  renameFolder = async object => {\n    const bucketName = this.Bucket;\n    const folderToMove = `${object.oldKey}/`;\n    const destinationFolder = `${object.newKey}`;\n\n    try {\n      const listObjectsResponse = await new S3(this.self.config).listObjects({\n        Bucket: bucketName,\n        Prefix: folderToMove,\n      });\n\n      const folderContentInfo = listObjectsResponse.Contents;\n      const folderPrefix = listObjectsResponse.Prefix;\n\n      await Promise.all(\n        folderContentInfo.map(async fileInfo => {\n          const copyObj = {\n            Bucket: bucketName,\n            CopySource: `${bucketName}/${fileInfo.Key}`,\n            Key: `${destinationFolder}/${fileInfo.Key.replace(\n              folderPrefix,\n              ''\n            )}`,\n          };\n          await new S3(this.self.config).copyObject(copyObj);\n\n          const delObj = {\n            Bucket: bucketName,\n            Key: fileInfo.Key,\n          };\n          await new S3(this.self.config).deleteObject(delObj);\n        })\n      );\n    } catch (err) {\n      console.error(err); // error handling\n    }\n  };\n  isUrlInternal = unsignedUrl => {\n    const pieces = unsignedUrl ? unsignedUrl.split('/') : ['/'];\n    const serviceProvider = pieces[0];\n    return serviceProvider !== 'https:';\n  };\n\n  getSignedUrl = async Key => {\n    if (this.isUrlInternal(Key)) {\n      const path = Key.split('/').slice(1, Key.length).join('/');\n      const pieces = Key ? Key.split('/') : ['/'];\n      const extension = pieces[pieces.length - 1].split('.').pop();\n\n      const params = {\n        Bucket: this.Bucket,\n        Key: path,\n        expiresIn: this.expiresIn,\n      };\n      const client = new S3Client(this.config);\n      const command = new GetObjectCommand(params);\n      const url = await getSignedUrl(client, command, {\n        expiresIn: this.expiresIn,\n      });\n      return {\n        url,\n        path,\n        extension,\n      };\n    } else {\n      return {\n        url: Key,\n        path: '',\n        extension: '',\n      };\n    }\n  };\n\n  downloadToBrowser = route => {\n    const pieces = route.split('/');\n    const file = pieces[pieces.length - 1];\n    const path = route.split('/').slice(1, route.split('/').length).join('/');\n    this.getSignedUrl(path, this.expiresIn, this.Bucket).then(url => {\n      const link = document.createElement('a');\n      link.setAttribute('target', '_blank');\n      link.setAttribute('href', url);\n      link.setAttribute('download', file);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    });\n  };\n\n  fetchStream = async Key => {\n    const client = new S3Client(this.config);\n    const response = await client\n      .send(\n        new GetObjectCommand({\n          Bucket: this.Bucket,\n          Key,\n        })\n      )\n      .then(async res => {\n        const reader = res.Body.pipeThrough(\n          new TextDecoderStream('utf-8')\n        ).getReader();\n        const array = [];\n        while (true) {\n          const { value, done } = await reader.read();\n          if (done) break;\n          array.push(value);\n        }\n        const ele = array.join('');\n        return ele;\n      });\n\n    return response;\n  };\n}\n","import apiInstance from \"../../../services/apiServices\";\nimport { baseUrl } from \"../../../environment\";\nimport * as EventEmitter from \"events\";\n\nexport default class MediaFactory {\n  constructor(contextData) {\n    this.Bucket = \"\";\n    this.config = {\n      fileStorageAccessKey: contextData.fileStorageAccessKey,\n    };\n  }\n  getBuckeName() {\n    return this.Bucket;\n  }\n\n  fetchFileFolder(object) {\n    const getParams = new URLSearchParams(object).toString();\n    return apiInstance\n      .get(\n        `/api/media/getList?X-Access-Key=${this.config.fileStorageAccessKey}&${getParams}`,\n      )\n      .then(r => ({\n        Contents: r.data.response.map(c => ({\n          ...c,\n          LastModified: new Date(c.LastModified),\n        })),\n      }));\n  }\n  uploadFile = target => {\n    const myEmitter = new EventEmitter();\n    myEmitter.done = () => {\n      const config = {\n        onUploadProgress: progressEvent => {\n          const pObj = {\n            loaded: progressEvent.loaded,\n            total: progressEvent.total,\n            Key: target.Key,\n          };\n          myEmitter.emit(\"httpUploadProgress\", pObj);\n        },\n      };\n      const formdata = new FormData();\n      formdata.append(\"X-Access-Key\", this.config.fileStorageAccessKey);\n      formdata.append(\"file\", target.Body);\n      formdata.append(\"folder\", target.Key.split(\"/\").slice(0, -1).join(\"/\"));\n      return apiInstance.post(`/api/media/upload`, formdata, config);\n    };\n    return myEmitter;\n  };\n  renameFile = async object => {\n    const getParams = new URLSearchParams({\n      fromFileURL: object.oldKey,\n      toFileURL: object.newKey,\n      \"X-Access-Key\": this.config.fileStorageAccessKey,\n    }).toString();\n    return apiInstance.get(`/api/media/renameFile?${getParams}`);\n  };\n  renameFolder = async object => {\n    const getParams = new URLSearchParams({\n      fromFileURL: object.oldKey,\n      toFileURL: object.newKey,\n      \"X-Access-Key\": this.config.fileStorageAccessKey,\n    }).toString();\n    return apiInstance.get(`/api/media/renameFile?${getParams}`);\n  };\n  deleteFolder = async (folder, callback) => {\n    const getParams = new URLSearchParams({\n      fileURL: folder,\n      \"X-Access-Key\": this.config.fileStorageAccessKey,\n    }).toString();\n    apiInstance\n      .get(`/api/media/deleteFile?${getParams}`)\n      .then(r => {\n        return callback({ status: \"success\" });\n      })\n      .catch(() => {\n        return callback({ status: \"fail\" });\n      });\n  };\n  isUrlInternal = unsignedUrl => {\n    const pieces = unsignedUrl ? unsignedUrl.split(\"/\") : [\"/\"];\n    const serviceProvider = pieces[0];\n    return serviceProvider !== \"https:\";\n  };\n\n  getSignedUrl = async (Key, downloadable = \"0\") => {\n    if (this.isUrlInternal(Key)) {\n      const path = Key.split(\"/\").slice(1, Key.length).join(\"/\");\n      const pieces = Key ? Key.split(\"/\") : [\"/\"];\n      const extension = pieces[pieces.length - 1].split(\".\").pop();\n\n      const getParams = new URLSearchParams({\n        fileURL: path,\n        \"X-Access-Key\": this.config.fileStorageAccessKey,\n        downloadable,\n      }).toString();\n      const url = `${baseUrl()}/api/media/render?${getParams}`;\n      return {\n        url,\n        path,\n        extension,\n      };\n    } else {\n      return {\n        url: Key,\n        path: \"\",\n        extension: \"\",\n      };\n    }\n  };\n\n  downloadToBrowser = route => {\n    const pieces = route.split(\"/\");\n    const file = pieces[pieces.length - 1];\n    this.getSignedUrl(route, \"1\").then(object => {\n      const link = document.createElement(\"a\");\n      link.setAttribute(\"target\", \"_blank\");\n      link.setAttribute(\"href\", object.url);\n      link.setAttribute(\"download\", file);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    });\n  };\n\n  fetchStream = async Key => {\n    const getParams = new URLSearchParams({\n      fileURL: Key,\n      \"X-Access-Key\": this.config.fileStorageAccessKey,\n    }).toString();\n    const url = `${baseUrl()}/api/media/render?${getParams}`;\n    return fetch(url).then(async res => {\n      const reader = res.body\n        .pipeThrough(new TextDecoderStream(\"utf-8\"))\n        .getReader();\n      const array = [];\n      while (true) {\n        const { value, done } = await reader.read();\n        if (done) break;\n        array.push(value);\n      }\n      const ele = array.join(\"\");\n      return ele;\n    });\n  };\n}\n","import AwsFactory from './AwsFactory';\nimport MediaFactory from './MediaFactory';\n\nconst FactoryMap = (storageType, appData) => {\n    switch(storageType) {\n    case 'AWSS3':\n        return {\n            library: new AwsFactory(appData),\n         };\n        break;\n    case 'SELF':\n        return {\n            library: new MediaFactory(appData),\n        };\n        break;\n    default:\n        return {\n            library: null\n        };\n    }\n}\n\nexport { FactoryMap };","export default __webpack_public_path__ + \"static/media/ban.99659585.svg\";","export default __webpack_public_path__ + \"static/media/spinner-1.650efd36.svg\";","/* eslint-disable new-cap */\nimport React, { useState, useEffect } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport Ban from '../../../images/ban.svg';\nimport Spinner from '../../../images/spinner-1.svg';\nimport { FactoryMap } from './FactoryMap';\nimport SvgRender from './SvgRender';\nimport VideoRender from './VideoRender';\n\nconst getServiceProvider = us => {\n  const pieces = us ? us.split('/') : ['/'];\n  const sp = pieces[0];\n  return sp;\n};\n\nconst SignedUrl = props => {\n  const {\n    mykey,\n    className,\n    style,\n    unsignedUrl,\n    type,\n    appData,\n    optionalAttr,\n    alt,\n    view,\n    ...rest\n  } = props;\n  const [url, setUrl] = useState('');\n  const [ext, setExt] = useState('');\n  const [, setFileName] = useState('');\n\n  useEffect(() => {\n    return () => {\n      setUrl('');\n      setFileName('');\n      setExt('');\n    };\n  }, []);\n\n  useEffect(() => {\n    if (appData && Object.keys(appData).length > 0) {\n      setUrl('');\n      const getSignedUrl = () => {\n        const sp = getServiceProvider(unsignedUrl);\n        const getUrl = FactoryMap(sp, appData)?.library?.getSignedUrl;\n        if (getUrl) {\n          getUrl(unsignedUrl)\n            .then(link => {\n              if (type === 'image' && link.extension !== 'svg') {\n                const myImage = new Image();\n                myImage.src = link.url;\n                myImage.onerror = e => {\n                  setUrl(Ban);\n                };\n                myImage.onload = e => {\n                  setUrl(link.url);\n                };\n              }\n              setUrl(link.url);\n              setExt(link.extension);\n              setFileName(link.path);\n            })\n            .catch(() => {\n              setUrl(Ban);\n            });\n        } else {\n          setUrl(Ban);\n          setExt('');\n          setFileName('');\n        }\n      };\n      getSignedUrl();\n    }\n  }, [appData, type, unsignedUrl]);\n\n  const renderTag = () => {\n    switch (type) {\n      case 'image':\n        // eslint-disable-next-line no-unused-vars\n        const { children, ...balance } = rest;\n        return ext !== 'svg' ? (\n          <LazyLoadImage\n            {...balance}\n            placeholderSrc={Spinner}\n            {...(url && { src: url })}\n            {...(mykey && { key: mykey })}\n            {...(optionalAttr && { optionalAttr })}\n            {...(className && { className })}\n            {...(alt && { alt })}\n            {...(style && { style })}\n          />\n        ) : (\n          <SvgRender\n            key={mykey}\n            unsignedUrl={unsignedUrl}\n            className=\"mediaIcon\"\n            {...rest}\n          />\n        );\n      case 'video':\n        return (\n          <VideoRender\n            key={mykey}\n            optionalAttr={optionalAttr}\n            style={style}\n            {...(className && { className })}\n            url={url}\n            view={view}\n            type={type}\n            {...rest}\n          />\n        );\n      case 'audio':\n        return (\n          <VideoRender\n            key={mykey}\n            optionalAttr={optionalAttr}\n            style={style}\n            {...(className && { className })}\n            url={url}\n            view={view}\n            type={type}\n            {...rest}\n            config={{\n              forceAudio: true,\n            }}\n          />\n        );\n      default:\n        return (\n          <a\n            target=\"_blank\"\n            {...(type ? { rel: 'noopener noreferrer', href: url } : {})}\n          >\n            {props.children}\n          </a>\n        );\n    }\n  };\n\n  return renderTag();\n};\n\nexport { getServiceProvider, SignedUrl };\n","/* eslint-disable new-cap */\nimport React, { useState, useEffect } from 'react';\nimport AppContext from '../../contexts/AppContext';\nimport apiInstance from '../../services/apiServices';\nimport { FactoryMap } from '../configuration/Gallery/FactoryMap';\nimport { getServiceProvider } from '../configuration/Gallery/SignedUrl';\n\nfunction Root(props) {\n  const [master, setMaster] = useState({});\n  const [fetchStatus, setFetchStatus] = useState(true);\n\n  const getData = async () => {\n    setFetchStatus(false);\n    // Note: Token validation shud`nt be set here\n    await apiInstance\n      .get('/')\n      .then(response => {\n        const data = response.data.response[0];\n        setMaster(data);\n        setFetchStatus(true);\n        favIconSetter(data);\n        document.documentElement.style.setProperty(\n          '--az-theme-color',\n          data.webThemeColor\n        );\n        document.documentElement.style.setProperty(\n          '--az-theme-bg-color',\n          data.webThemeBackground\n        );\n      })\n      .catch(error => setFetchStatus(false))\n      .finally(error => false);\n  };\n\n  const favIconSetter = data => {\n    const ele = document.querySelector('#favIcon');\n    const sp = getServiceProvider(data.favIconImg);\n    FactoryMap(sp, data)\n      .library.getSignedUrl(data.favIconImg)\n      .then(data => {\n        ele.href = data.url || '';\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      {fetchStatus && (\n        <AppContext.Provider value={[master, setMaster]}>\n          <h1>Hello world</h1>\n          {/* <UserContextProvider config={master}>\n            <GlobalHeader\n              onLogAction={b => {\n                setLogger(b);\n              }}\n            >\n              <MainApp />\n            </GlobalHeader>\n          </UserContextProvider> */}\n        </AppContext.Provider>\n      )}\n    </>\n  );\n}\n\nexport default Root;\n"],"sourceRoot":""}